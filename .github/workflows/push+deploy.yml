name: Run tests and release
on:
  workflow_dispatch: # manual triggered
  push:
    branches:
      - master # other branches should be catched via PR
  pull_request:
  schedule:
    - cron: "0 0 1 * *"
jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: 'Running black'
        run: black . --check
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: 'Running flake8'
        run: flake8 acmems bin
  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python-version }}'
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt
      - name: 'Running pytest'
        run: py.test --tb=short -k 'not boulder and not pebble'
  integration:
    runs-on: ubuntu-latest
    needs:
      - unit
    strategy:
      matrix:
        acme-server:
          - pebble
          - boulder
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python-version }}'
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt
      - name: 'Preparing a test ACME server implementation'
        run: tests/scripts/setup-${{ matrix.acme-server }}.sh
      - name: 'Running pytest'
        run: tests/scripts/pytest-${{ matrix.acme-server }}.sh
      - name: 'Integration: registration'
        run: tests/integration/register.sh ${{ matrix.acme-server }}
      - name: 'Integration: generate certificate'
        run: tests/integration/gencert.py ${{ matrix.acme-server }}
      - name: "Display script logs"
        run: tests/scripts/logs-${{ matrix.acme-server }}.sh
  release:
    runs-on: ubuntu-latest
    needs:
      - format
      - flake8
      - unit
      - integration
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist
          twine upload dist/*
