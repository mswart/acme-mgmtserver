[project]
name = "acme-mgmtserver"
version = "0.5.0a1"
requires-python = ">=3.9"
license = "GPL-3.0-or-later"
dependencies = [
  "acme>=0.21.0",
  "josepy",
  "PyOpenSSL",    # >=2017.1.0",  # to_cryptography (>=2017.1.0)
  "IPy",
]
description = "Basic Python Server to execute ACME on behalf of dumb clients"
readme = "README.md"
authors = [{ name = "Malte Swart", email = "mswart@devtation.de" }]
keywords = ["acme", "server", "client", "proxy", "letsencrypt"]
classifiers = [
  'Development Status :: 5 - Production/Stable',
  # Indicate who your project is intended for
  'Intended Audience :: System Administrators',
  'Topic :: Internet :: WWW/HTTP :: HTTP Servers',
  'Topic :: Security :: Cryptography',
  'Topic :: System :: Networking',
  'Topic :: System :: Systems Administration',
  'Topic :: Utilities',
  # Pick your license as you wish (should match "license" above)
  'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
  # Specify the Python versions you support here. In particular, ensure
  # that you indicate whether you support Python 2, Python 3 or both.
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.13',
]

[project.urls]
Repository = "https://github.com/mswart/acme-mgmtserver"
Issues = "https://github.com/mswart/acme-mgmtserver/issues"
Changelog = "https://github.com/mswart/acme-mgmtserver/blob/master/CHANGELOG.rst"

[project.optional-dependencies]
systemd = ["systemd"]
dns01 = ["dnslib", "py3dns"]

[project.scripts]
acmems = "acmems.__main__:main"
acme-register = "acmems.register:main"

[build-system]
requires = ["uv_build>=0.8.6,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "acmems"
module-root = ""

[dependency-groups]
dev = ["ty>=0.0.1a17", "ruff>=0.12.7", "pytest>=8.4.1"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
  "B",      # bugbear
  "C4",     # comprehensions
  "DTZ",    # datetime timezone
  "E",      # pycodestyle errors
  "F",      # pyflakes
  "S",      # bandit
  "I",
  "W",      # pycodestyle warnings
  "YTT",    # flake-2020: avoid non-future proof code
  "RUF",
  "I001",   # sort imports
  "PGH003", # require error code in type-ignore directives
  "T100",   # prevent debugger statements
  "PIE",    # flake8-pie see https://docs.astral.sh/ruff/rules/#flake8-pie-pie
]

ignore = [
  "E5",   # line length (fixed by formatter)
  "S101", # use of assert
  "S310",
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
